buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.3.13")
        classpath("net.serenity-bdd:serenity-single-page-report:2.1.4")
    }
}

plugins {
    id 'application'
    id 'pmd'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.4.5'
    id 'uk.gov.hmcts.java' version '0.12.2'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'com.gorylenko.gradle-git-properties' version '2.2.0'
    id 'info.solidsoft.pitest' version '1.5.2'
    id 'org.sonarqube' version '2.8'
    id 'au.com.dius.pact' version '4.1.0'
}

apply plugin: 'java'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'net.serenity-bdd.aggregator'

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/probate/services/business")
    keys = ['git.commit.id', 'git.commit.time']
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT"
}

group = 'uk.gov.hmcts.probate'
version = "3.0.0"
mainClassName = 'uk.gov.hmcts.probate.BusinessApplication'

sourceCompatibility = 11
targetCompatibility = 11

jacoco {
    toolVersion = '0.8.5'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        html.destination file("${buildDir}/reports/jacoco")
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Probate :: Business Service"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}
pitest {
    targetClasses = ['uk.gov.hmcts.probate.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
}

test.finalizedBy jacocoTestReport

dependencyCheck {
  suppressionFile = 'suppressions.xml'
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    // Example 1: reject all non stable versions
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

tasks {
    dependencyUpdates {
        checkConstraints = true
    }
}

sourceSets {
    testFunctional {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
    testContract {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
}

task functional(type: Test) {
    description = "Runs functional Tests"
    testClassesDirs = sourceSets.testFunctional.output.classesDirs
    classpath = sourceSets.testFunctional.runtimeClasspath
    finalizedBy aggregate
}

functional.finalizedBy(aggregate)

serenity {
    reports = ["single-page-html"]
}

task pactTask(type: Test) {
    description = "Runs pact Tests"
    useJUnitPlatform()
    include "uk/gov/hmcts/probate/services/consumer/**"
    exclude "uk/gov/hmcts/probate/services/businessdocuments/controllers/**"
    testClassesDirs = sourceSets.testContract.output.classesDirs
    classpath = sourceSets.testContract.runtimeClasspath
}

pmd {
    toolVersion = "6.3.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.testFunctional, sourceSets.testSmoke]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

repositories {
    mavenLocal()
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    jcenter()
}

def versions = [
        springBootVersion: '2.3.4.RELEASE',
        logging          : '5.1.1',
        serenity         : '2.0.23',
        serenityreporter : '2.1.4',
        lombok           : '1.18.12',
        tomcat           : '9.0.43',
        pact_version     : '4.1.11',
        junit_jupiter    : '5.7.1'
]

ext["rest-assured.version"] = '4.1.2'
ext["jackson-bom.version"] = '2.10.1'

dependencyManagement {
  dependencies {
    //CVE-2020-26939
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.67'

    //CVE-2020-15250
    dependency group: 'junit', name: 'junit', version: '4.13.2'

    //CVE-2021-22112
    dependencySet(group: 'org.springframework.security', version: '5.3.8.RELEASE') {
      entry 'spring-security-crypto'
    }
  }
}

dependencies {
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: versions.springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBootVersion
    implementation group: 'org.springframework.retry', name: 'spring-retry'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    implementation group: 'org.springframework.hateoas', name: 'spring-hateoas'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator'
    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.15.1-RELEASE'
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.logging
    implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.0.0'
    implementation group: 'uk.gov.hmcts.reform', name: 'pdf-service-client', version: '7.0.0'
    implementation group: 'uk.gov.hmcts.reform', name: 'document-management-client', version: '6.0.0'
    implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.0.4'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    implementation group: 'org.pitest', name: 'pitest', version: '1.4.10'
    implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
    implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    implementation("com.fasterxml.jackson.core:jackson-databind:2.11.2")
    implementation group: 'uk.gov.hmcts.reform.probate', name: 'probate-commons', version: '1.1.2.5'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.4'

    implementation(group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: versions.tomcat) {
        force = true
    }
    implementation(group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: versions.tomcat) {
        force = true
    }

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    testImplementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.17'
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter
    testFunctionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    testFunctionalImplementation group: 'uk.gov.hmcts.reform', name: 'pdf-service-client', version: '7.0.0'
    testFunctionalImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.0.0'
    testFunctionalImplementation sourceSets.main.runtimeClasspath
    testFunctionalImplementation sourceSets.test.runtimeClasspath
    testFunctionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testFunctionalImplementation("com.fasterxml.jackson.core:jackson-databind:2.11.2")

    testImplementation group: 'io.rest-assured', name: 'rest-assured'
    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit_jupiter
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit_jupiter
    testImplementation group: 'org.junit.jupiter', name:'junit-jupiter-api', version: versions.junit_jupiter

    testContractImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    testContractImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBootVersion
    testContractImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit_jupiter
    testImplementation  group: 'au.com.dius', name: 'pact-jvm-provider-spring_2.12', version: '3.6.14'
    testContractImplementation  group: 'au.com.dius', name: 'pact-jvm-provider-spring_2.12', version: '3.6.14'
    testContractImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    testContractRuntime group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.7.0'

    testContractImplementation sourceSets.main.runtimeClasspath
    testContractImplementation sourceSets.test.runtimeClasspath
}

bootJar {
    archiveFileName = 'business-service.jar'
    manifest {

        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

task runAndPublishConsumerPactTests(type: Test) {
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.testContract.output.classesDirs
    classpath = sourceSets.testContract.runtimeClasspath

}

runAndPublishConsumerPactTests.dependsOn pactTask

runAndPublishConsumerPactTests.finalizedBy pactPublish

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }
}
